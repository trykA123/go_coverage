name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set PR URL
        if: github.event_name == 'pull_request'
        run: echo "MERGE_REQUEST_URL=https://github.com/${GITHUB_REPOSITORY}/pull/${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22" # Change this to your desired Go version

      - name: Build
        run: go build -v ./...

      - name: Install gocover-cobertura
        run: go install github.com/boumenot/gocover-cobertura

      - name: Test
        run:
          go test -coverprofile=coverage.out ./...
          # go test -coverprofile=coverage-mux.out -covermode=count github.com/gorilla/mux

      - name: Convert coverage to Cobertura format
        run:
          gocover-cobertura < coverage.out > coverage.xml
          # gocover-cobertura < coverage-mux.out > coverage-test.xml

      - uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  upload_coverage_to_influxdb:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: Extract coverage percentage
        id: get_coverage
        run: |
          LINE_RATE=$(grep -oP 'line-rate="\K[^"]*' coverage.xml | head -1)
          COVERAGE=$(echo "$LINE_RATE" | awk '{printf "%.2f", $1 * 100}')
          echo "Coverage: $COVERAGE%"
          echo "::set-output name=coverage::$COVERAGE"

      - name: Upload coverage to InfluxDB
        run: |
          curl -X POST "${{ secrets.INFLUXDB_URL }}/api/v2/write?org=${{ secrets.INFLUXDB_ORG }}&bucket=${{ secrets.INFLUXDB_BUCKET }}&precision=s" \
          -H "Authorization: Token ${{ secrets.INFLUXDB_TOKEN }}" \
          --data-raw "code_coverage,repository=${GITHUB_REPOSITORY},branch=${{ github.ref_name }},project_type=${{secrets.PROJECT_TYPE}},commit_author=${{ github.actor }},action_url=${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }} coverage=${{ steps.get_coverage.outputs.coverage }}"

      # - name: Code Coverage Report
      #   uses: irongut/CodeCoverageSummary@v1.3.0

      #   with:
      #     filename: "coverage*.xml"
      #     badge: true
      #     fail_below_min: true
      #     format: markdown
      #     hide_branch_rate: false
      #     hide_complexity: true
      #     indicators: true
      #     output: both
      #     thresholds: "30 80"

      # - name: Add Coverage PR Comment
      #   uses: marocchino/sticky-pull-request-comment@v2
      #   if: always()
      #   with:
      #     recreate: true
      #     path: code-coverage-results.md
